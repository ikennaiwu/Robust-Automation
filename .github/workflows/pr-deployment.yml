name: PR Deployment

on:
  pull_request:
    types: [opened, synchronize, closed]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t myapp:${{ github.sha }} .
        docker push myapp:${{ github.sha }}

    - name: Deploy to local Docker
      run: |
        docker run -d -p 80:80 myapp:${{ github.sha }}

    - name: Notify deployment started
      run: |
        curl -X POST -H "Content-Type: application/json" \
        -d '{"body": "Deployment for PR #${{ github.event.number }} has started.\n\nURL: http://localhost"}' \
        https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments \
        -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}"

  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Cleanup Docker containers
      run: |
        docker ps -q --filter ancestor=myapp | xargs docker rm -f

    - name: Notify cleanup
      run: |
        curl -X POST -H "Content-Type: application/json" \
        -d '{"body": "Deployment for PR #${{ github.event.number }} has been cleaned up."}' \
        https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments \
        -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}"

